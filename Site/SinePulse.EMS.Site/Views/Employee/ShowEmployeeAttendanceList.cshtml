@using SinePulse.EMS.Domain.Enums
@model SinePulse.EMS.Site.Models.EmployeeAttendanceListViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "ShowEmployeeAttendanceList";
}
<div class="page-container">
  <!-- BEGIN CONTENT -->
  <div class="page-content-wrapper">
    <div class="page-content">
      <div class="portlet-body form">
        <!-- BEGIN FORM-->
        <form asp-action="ShowEmployeeAttendanceList" class="form-horizontal box-shadow-form" id="form_sample_3">
          <div class="form-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="page-bar margin-bottom-15">
            </div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    @Html.DropDownListFor(x => x.InstituteId, new SelectList(Model.InstituteList, "Id", "OrganisationName"), @Localizer["ShowEmployeeAttendanceList.SelectInstitute"].Value, new { @class = "form-control", id = "instituteDropDown" })
                    <span asp-validation-for="InstituteId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    @Html.DropDownListFor(x => Model.BranchId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowEmployeeAttendanceList.SelectBranch"].Value, new { @class = "form-control", id = "branchDropDown" })
                    <span asp-validation-for="BranchId" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    @Html.DropDownListFor(x => Model.BranchMediumId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowEmployeeAttendanceList.SelectMedium"].Value, new { @class = "form-control", id = "mediumDropDown" })
                    <span asp-validation-for="BranchMediumId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    @Html.DropDownListFor(x => Model.EmployeeId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowEmployeeAttendanceList.SelectEmployee"].Value, new { @class = "form-control", id = "employeeDropDown" })
                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    <input asp-for="AttendanceStartDate" type="text" value="" class="form-control datepicker">
                    <span asp-validation-for="AttendanceStartDate" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-12">
                    <input asp-for="AttendanceEndDate" type="text" value="" class="form-control datepicker">
                    <span asp-validation-for="AttendanceEndDate" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="btn-container">
              <button type="button" class="btn custom-btn custom-cancel-btn pull-left">@Localizer["ShowEmployeeAttendanceList.CancelButton"]</button>
              <button type="button" onclick="showAttendance();" class="btn custom-btn custom-cancel-btn pull-right">@Localizer["ShowEmployeeAttendanceList.ShowButton"]</button>
              <div class="clearfix"></div>
            </div>
          </div>
        </form>
        <!-- END FORM-->
      </div>
      <div class="portlet-body">

        <table class="table table-striped table-hover" id="sample_5">

          <thead class="filterCriteria">
            <tr>
              <th>
                @Localizer["ShowEmployeeAttendanceList.AttendanceDate"]
              </th>
              <th>
                @Localizer["ShowEmployeeAttendanceList.InTime"]
              </th>
              <th>
                @Localizer["ShowEmployeeAttendanceList.OutTime"]
              </th>
              <th>
                @Localizer["ShowEmployeeAttendanceList.Employee"]
              </th>
            </tr>
          </thead>
          <tbody>

          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>




@section Scripts
    {
<script type="text/javascript">
    
    $("#sample_5").hide();
    var instituteDropDown = $("#instituteDropDown");
    var branchDropDown = $("#branchDropDown");
    var mediumDropDown = $("#mediumDropDown");
    var employeeDropDown = $("#employeeDropDown");
    
    
    instituteDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/Institute/GetBranches?instituteId=" + $("#instituteDropDown").val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              branchDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.BranchName, item.Id);
                    branchDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Branch Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Branch Data using Ajax.");
            }
        });
    });

    branchDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/Branch/GetMediums?branchId=" + branchDropDown.val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              mediumDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.Medium.MediumName, item.Id);
                    mediumDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Medium Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Medium Data using Ajax.");
            }
        });
    });

    mediumDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/BranchMedium/GetEmployees?branchMediumId=" + mediumDropDown.val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              employeeDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.FullName, item.Id);
                    employeeDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Employee Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Employee Data using Ajax.");
            }
        });
    });

    function showAttendance() {
        $('span[data-valmsg-for="EmployeeId"]').text('');
        $('span[data-valmsg-for="AttendanceStartDate"]').text('');
        $('span[data-valmsg-for="AttendanceEndDate"]').text('');
        //$("#sample_5").empty();
        $("#sample_5 tbody tr").each(function () {
            this.parentNode.removeChild(this);
        });
        if (!employeeDropDown.val()) {
            $('span[data-valmsg-for="EmployeeId"]').text('Please specify a Employee.');
            return;
        }
        if (!$("#AttendanceStartDate").val()) {
            $('span[data-valmsg-for="AttendanceStartDate"]').text('Please specify a Start Date.');
            return;
        }
        if (!$("#AttendanceEndDate").val()) {
            $('span[data-valmsg-for="AttendanceEndDate"]').text('Please specify a End Date.');
            return;
        }
        else {
            var startDate = new Date($("#AttendanceStartDate").val());
            var endDate = new Date($("#AttendanceEndDate").val());

            if (startDate > endDate) {
                $('span[data-valmsg-for="AttendanceEndDate"]').text('End Date must be biggr than Start Date.');
                return;
            }
        }
        var model = {
            EmployeeId: parseInt(employeeDropDown.val()),
            AttendanceStartDate: $('#AttendanceStartDate').val(),
            AttendanceEndDate: $('#AttendanceEndDate').val()
        };
        $.ajax({
            type: "POST",
            data: JSON.stringify(model),
            url: "/Employee/ShowEmployeeAttendanceList",
            contentType: "application/json",
            success: function (response) {
                $("#sample_5").show();
                jQuery.each(response, function (index, item) {
                    var tableRow = "<tr><td><a href=\"/Employee/ViewEmployeeAttendance?employeeAttendanceId=" + item.Id+"\">" + item.AttendanceDate + "</td><td>" + item.InTime + "</td><td>" + item.OutTime + "</a></td><td>" + item.Employee.FullName + "</td></tr>";
                    
                    $("#sample_5").append(tableRow);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Branch Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Branch Data using Ajax.");
            }
        });
    }
    

</script>
}

