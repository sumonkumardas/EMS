@using Microsoft.AspNetCore.Mvc.Localization
@using SinePulse.EMS.Domain.Enums
@model SinePulse.EMS.Site.Models.AddClassTestViewModel
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "AddClassTest";
}

<div class="page-container">
  <!-- BEGIN CONTENT -->
  <div class="page-content-wrapper">
    <div class="page-content">
      <div class="portlet-body form">
        <!-- BEGIN FORM-->
        <div class="title-on-top">@Localizer["AddClassTest.Title"]</div>
        <form asp-action="AddClassTest" class="form-horizontal box-shadow-form" id="form_sample_3">
          <div class="form-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="SectionId" type="hidden" class="form-control" />
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.TestName"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="TestName" type="text" class="form-control" />
                    <span asp-validation-for="TestName" class="text-danger"></span>
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.Term"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.TermId, new SelectList(Model.Terms, "TermId", "TermName"), Localizer["AddClassTest.SelectTerm"].Value, new { @class = "form-control", id = "term-dropdown" })
                    <span asp-validation-for="TermId" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.Class"] </label>
                  </div>
                  <div class="col-md-8">
                    <input type="text" class="form-control" value="@Model.ClassText" disabled="disabled" />
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.Group"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.GroupName, new SelectList(Model.Terms.FirstOrDefault(x => x.TermId == Model.TermId)?.Groups ?? new List<AddClassTestViewModel.Group>(), "GroupName", "GroupName"), Localizer["AddClassTest.SelectGroup"].Value, new { @class = "form-control", id = "group-dropdown" })
                    <span asp-validation-for="GroupName" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.Subject"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.ExamConfigurationId, new SelectList(Model.Terms.FirstOrDefault(x => x.TermId == Model.TermId)?.Groups?.FirstOrDefault(x => x.GroupName == Model.GroupName)?.Subjects ?? new List<AddClassTestViewModel.Subject>(), "ExamConfigurationId", "SubjectName"), Localizer["AddClassTest.SelectSubject"].Value, new { @class = "form-control", id = "subject-dropdown" })
                    <span asp-validation-for="ExamConfigurationId" class="text-danger"></span>
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.ExamType"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <select asp-for="ExamType" class="form-control" asp-items="Html.GetEnumSelectList<ExamTypeEnum>()">
                      <option selected="selected" value="0">@Localizer["AddClassTest.SelectExamType"]</option>
                    </select>
                    <span asp-validation-for="ExamType" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.FullMarks"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="FullMarks" type="text" value="" class="form-control" />
                    <span asp-validation-for="FullMarks" class="text-danger"></span>
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.Date"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="Date" type="text" value="" class="form-control datepicker">
                    <span asp-validation-for="Date" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.StartTime"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="StartTime" type="text" value="" onfocus="(this.type='time')" onblur="{this.type='text'}" class="form-control" />
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                  </div>
                </div>
              </div>

              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["AddClassTest.EndTime"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="EndTime" type="text" value="" onfocus="(this.type='time')" onblur="{this.type='text'}" class="form-control" />
                    <span asp-validation-for="EndTime" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="btn-container">
              <button type="button" class="btn custom-btn custom-cancel-btn pull-left" onclick="location.href='/Section/ViewSection?sectionId=@Model.SectionId#tab_classTest'">@Localizer["AddClassTest.CancelButton"]</button>
              <button type="submit" class="btn custom-btn custom-cancel-btn pull-right">@Localizer["AddClassTest.CreateButton"]</button>
              <div class="clearfix"></div>
            </div>
          </div>
        </form>
        <!-- END FORM-->
      </div>
    </div>
  </div>
</div>

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
  <script>
    var terms = {};
    @foreach (var term in Model.Terms)
    {
      @:var groups = {};
      foreach (var group in term.Groups)
      {
        @:var subjects = {};
        foreach (var subject in group.Subjects)
        {
          @:subjects[@subject.ExamConfigurationId] = { examConfigurationId: @subject.ExamConfigurationId, subjectName: '@subject.SubjectName' };
        }
        @:groups['@group.GroupName'] = { groupName: '@group.GroupName', subjects: subjects };
      }
      @:terms[@term.TermId] = { termId: @term.TermId, termName: '@term.TermName', groups: groups };
    }

    $(document).ready(function() {
      var termDropdown = $('#term-dropdown');
      var groupDropdown = $('#group-dropdown');
      var subjectDropdown = $('#subject-dropdown');

      termDropdown.children('option:not(:first)').remove();
      $.each(terms,
        function(index, term) {
          termDropdown.append(new Option(term.termName, term.termId));
        });
      termDropdown.change(function() {
        var termId = termDropdown.val();
        groupDropdown.children('option:not(:first)').remove();
        subjectDropdown.children('option:not(:first)').remove();
        $.each(terms[termId].groups,
          function(index, group) {
            groupDropdown.append(new Option(group.groupName, group.groupName));
          });
      });
      groupDropdown.change(function() {
        var termId = termDropdown.val();
        var groupName = groupDropdown.val();
        subjectDropdown.children('option:not(:first)').remove();
        $.each(terms[termId].groups[groupName].subjects,
          function(index, subject) {
            subjectDropdown.append(new Option(subject.subjectName, subject.examConfigurationId));
          });
      });
      console.log("ready!");
    });
  </script>
}
