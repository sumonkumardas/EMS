@using Microsoft.AspNetCore.Mvc.Localization
@model StudentAttendanceListViewModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "ShowStudentAttendanceList";
}

<div class="page-container">
  <!-- BEGIN CONTENT -->
  <div class="page-content-wrapper">
    <div class="page-content">
      <div class="portlet-body form">
        <!-- BEGIN FORM-->
        <div class="title-on-top">@Localizer["ShowStudentAttendance.Title"]</div>
        <form asp-action="ShowStudentAttendanceList" class="form-horizontal box-shadow-form" id="form_sample_3">
          <div class="form-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.Institute"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.InstituteId, new SelectList(Model.InstituteList, "Id", "OrganisationName"), @Localizer["ShowStudentAttendance.SelectInstitute"].Value, new { @class = "form-control", id = "instituteDropDown" })
                    <span asp-validation-for="InstituteId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.Branch"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => Model.BranchId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowStudentAttendance.SelectBranch"].Value, new { @class = "form-control", id = "branchDropDown" })
                    <span asp-validation-for="BranchId" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.Medium"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => Model.BranchMediumId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowStudentAttendance.SelectMedium"].Value, new { @class = "form-control", id = "mediumDropDown" })
                    <span asp-validation-for="BranchMediumId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.Section"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => Model.SectionId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowStudentAttendance.SelectSection"].Value, new { @class = "form-control", id = "studentSectionDropDown" })
                    <span asp-validation-for="SectionId" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.StartDate"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                 
                      <input asp-for="AttendanceStartDate" value="" type="text" class="form-control datepicker" name="AttendanceStartDate">
                    
                    <!-- /input-group -->

                    <span asp-validation-for="AttendanceStartDate" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.EndDate"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                   
                      <input asp-for="AttendanceEndDate" value="" type="text" class="form-control datepicker" name="AttendanceEndDate">
                   
                    <!-- /input-group -->

                    <span asp-validation-for="AttendanceEndDate" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["ShowStudentAttendance.Student"] </label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => Model.StudentId, Enumerable.Empty<SelectListItem>(), @Localizer["ShowStudentAttendance.SelectStudent"].Value, new { @class = "form-control", id = "studentDropDown" })
                    <span asp-validation-for="StudentId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
              </div>
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="btn-container">
              <button type="button" class="btn custom-btn custom-cancel-btn pull-left">@Localizer["ShowStudentAttendance.CancelButton"]</button>
              <button type="button" onclick="showAttendance();" class="btn custom-btn custom-cancel-btn pull-right">@Localizer["ShowStudentAttendance.ShowButton"]</button>
              <div class="clearfix"></div>
            </div>
          </div>
        </form>
        <!-- END FORM-->
        <div class="portlet-body">
          <table class="table table-striped table-hover" id="sample_5">
            <thead class="filterCriteria">
              <tr>
                <th>
                  @Localizer["ShowStudentAttendance.AttendanceDate"]
                </th>
                <th>
                  @Localizer["ShowStudentAttendance.InTime"]
                </th>
                <th>
                  @Localizer["ShowStudentAttendance.OutTime"]
                </th>
                <th>
                  @Localizer["ShowStudentAttendance.Student"]
                </th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
      </div>
      
    </div>
  </div>
</div>


@section Scripts
    {
<script type="text/javascript">
    
    $("#sample_5").hide();
    var instituteDropDown = $("#instituteDropDown");
    var branchDropDown = $("#branchDropDown");
    var mediumDropDown = $("#mediumDropDown");
    var studentSectionDropDown = $("#studentSectionDropDown");
    var studentDropDown = $("#studentDropDown");
    
    
    instituteDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/Institute/GetBranches?instituteId=" + $("#instituteDropDown").val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              branchDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.BranchName, item.Id);
                    branchDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Branch Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Branch Data using Ajax.");
            }
        });
    });

    branchDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/Branch/GetMediums?branchId=" + branchDropDown.val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              mediumDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.Medium.MediumName, item.Id);
                    mediumDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Medium Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Medium Data using Ajax.");
            }
        });
    });

    mediumDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/BranchMedium/GetSections?branchMediumId=" + mediumDropDown.val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                studentSectionDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.SectionName, item.Id);
                    studentSectionDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Section Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Section Data using Ajax.");
            }
        });
    });

    studentSectionDropDown.change(function () {
        $.ajax({
            type: "POST",
            url: "/Section/GetSectionStudents?sectionId=" + studentSectionDropDown.val(),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                studentDropDown.children('option:not(:first)').remove();
                jQuery.each(response, function (index, item) {
                    var dropdownItem = new Option(item.Student.FullName, item.Id);
                    studentDropDown.append(dropdownItem);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Student Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Student Data using Ajax.");
            }
        });
    });

    function showAttendance() {
        $('span[data-valmsg-for="StudentId"]').text('');
        $('span[data-valmsg-for="AttendanceStartDate"]').text('');
        $('span[data-valmsg-for="AttendanceEndDate"]').text('');
        //$("#sample_5").empty();
        $("#sample_5 tbody tr").each(function () {
            this.parentNode.removeChild(this);
        });
        if (!studentDropDown.val()) {
            $('span[data-valmsg-for="StudentId"]').text('Please specify a Student.');
            return;
        }
        if (!$("#AttendanceStartDate").val()) {
            $('span[data-valmsg-for="AttendanceStartDate"]').text('Please specify a Start Date.');
            return;
        }
        if (!$("#AttendanceEndDate").val()) {
            $('span[data-valmsg-for="AttendanceEndDate"]').text('Please specify a End Date.');
            return;
        }
        else {
            var startDate = new Date($("#AttendanceStartDate").val());
            var endDate = new Date($("#AttendanceEndDate").val());

            if (startDate > endDate) {
                $('span[data-valmsg-for="AttendanceEndDate"]').text('End Date must be bigger than Start Date.');
                return;
            }
        }
        var model = {
            StudentId: parseInt(studentDropDown.val()),
            AttendanceStartDate: $('#AttendanceStartDate').val(),
            AttendanceEndDate: $('#AttendanceEndDate').val()
        };
        $.ajax({
            type: "POST",
            data: JSON.stringify(model),
            url: "/Student/ShowStudentAttendanceList",
            contentType: "application/json",
            success: function (response) {
                $("#sample_5").show();
                jQuery.each(response, function (index, item) {
                    var tableRow = "<tr><td><a href=\"/Student/ViewStudentAttendance?studentAttendanceId=" + item.Id+"\">" + item.AttendanceDate + "</td><td>" + item.InTime + "</td><td>" + item.OutTime + "</a></td><td>" + item.Student.FullName + "</td></tr>";
                    
                    $("#sample_5").append(tableRow);
                });
            },
            failure: function (response) {
                alert("Failure..! Could not Fetch Branch Data using Ajax.");
            },
            error: function (response) {
                alert("Error..! Could not Fetch Branch Data using Ajax.");
            }
        });
    }
    

</script>
}

