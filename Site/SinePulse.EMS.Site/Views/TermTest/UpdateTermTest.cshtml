@using SinePulse.EMS.Domain.Enums
@model SinePulse.EMS.Site.Models.EditTermTestViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
  Layout = "~/Views/Shared/_Layout.cshtml";
  ViewData["Title"] = "EditTermTest";
}

<div class="page-container">
  <!-- BEGIN CONTENT -->
  <div class="page-content-wrapper">
    <div class="page-content">
      <div class="portlet-body form">
        <!-- BEGIN FORM-->
        <div class="title-on-top">@Localizer["UpdateTermTest.Title"]</div>
        <form asp-action="UpdateTermTest" class="form-horizontal box-shadow-form" id="form_sample_3">
          <div class="form-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.Class"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.ClassId, Enumerable.Empty<SelectListItem>(), @Localizer["UpdateTermTest.SelectClass"].Value, new { @class = "form-control", id = "classDropDown", required = true })
                    <span asp-validation-for="ClassId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.Group"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <div class="radio-list">
                      @Html.DropDownListFor(x => x.GroupId, Enumerable.Empty<SelectListItem>(), @Localizer["UpdateTermTest.SelectGroup"].Value, new { @class = "form-control", id = "groupDropDown", required = true })
                      <span asp-validation-for="GroupId" class="text-danger"></span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.Subject"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    @Html.DropDownListFor(x => x.SubjectId, Enumerable.Empty<SelectListItem>(), @Localizer["UpdateTermTest.SelectSubject"].Value, new { @class = "form-control", id = "subjectDropDown", required = true })
                    <span asp-validation-for="SubjectId" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.ExamType"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <select asp-for="ExamType" class="form-control" asp-items="Html.GetEnumSelectList<ExamTypeEnum>()">
                      <option selected="selected" value="0">@Localizer["UpdateTermTest.SelectExamType"]</option>
                    </select>
                    <span asp-validation-for="ExamType" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.StartTime"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="StartTime" type="text" onfocus="(this.type='time')" onblur="{this.type='text'}" class="form-control" />
                    <span asp-validation-for="StartTime" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.EndTime"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">
                    <input asp-for="EndTime" type="text" onfocus="(this.type='time')" onblur="{this.type='text'}" class="form-control" />
                    <span asp-validation-for="EndTime" class="text-danger"></span>
                  </div>
                </div>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row-fluid col-md-12 zero-padding-row">
              <div class="col-md-6">
                <div class="form-group">
                  <div class="col-md-4">
                    <label>@Localizer["UpdateTermTest.Date"]</label><span class="required">*</span>
                  </div>
                  <div class="col-md-8">

                    <input asp-for="Date" type="text" class="form-control" name="Date">

                    <!-- /input-group -->

                    <span asp-validation-for="Date" class="text-danger"></span>
                  </div>
                </div>
              </div>
              <div class="col-md-6">

              </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group" hidden>
              <div class="col-md-12">
                <input asp-for="Id" type="text" class="form-control" />
                <input id="termId" asp-for="TermId" type="text" class="form-control" />
                <input id="termBranchId" asp-for="TermBranchId" type="text" class="form-control" />
                <span asp-validation-for="TermId" class="text-danger"></span>
              </div>
            </div>
            <div class="btn-container">
              <button type="button" class="btn custom-btn custom-cancel-btn pull-left" onclick="location.href='/Term/ViewTerm?termId=@Model.TermId#tab_examRoutine'">@Localizer["UpdateTermTest.CancelButton"]</button>
              <button type="submit" class="btn custom-btn custom-cancel-btn pull-right">@Localizer["UpdateTermTest.UpdateButton"]</button>
              <div class="clearfix"></div>
            </div>
          </div>
        </form>
        <!-- END FORM-->
      </div>
    </div>
  </div>
</div>


@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

  <script>
        var classDropDown = $("#classDropDown");
        var groupDropDown = $("#groupDropDown");
        var subjectDropDown = $("#subjectDropDown");
        var roomDropDown = $("#roomDropDown");
        var firstLoad = true;
        classDropDown.append(new Option(0, "Please Select"));
        groupDropDown.append(new Option(0, "Please Select"));
        subjectDropDown.append(new Option(0, "Please Select"));
        roomDropDown.append(new Option(0, "Please Select"));
        $(function() {
            $.ajax({
                type: "POST",
                url: "/TermTest/GetClassValues?termId=" + parseInt($('#termId').val()),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    classDropDown.children('option:not(:first)').remove();
                    jQuery.each(response,
                        function(index, item) {
                            var dropdownItem = new Option(item.ClassName, item.ClassId);
                            classDropDown.append(dropdownItem);
                        });
                    if (firstLoad == true) {
                        classDropDown.val(@Model.ClassId);
                        classDropDown.trigger('change');
                    }

                },
                failure: function(response) {
                    alert("Failure..! Could not Fetch Data using Ajax.");
                },
                error: function(response) {
                    alert("Error..! Could not Fetch Data using Ajax.");
                }
            });
            $.ajax({
                type: "POST",
                url: "/TermTest/GetRooms?termId=" +
                    parseInt($('#termId').val()) +
                    "&branchId=" +
                    parseInt($('#termBranchId').val()),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    roomDropDown.children('option:not(:first)').remove();
                    jQuery.each(response,
                        function(index, item) {
                            var dropdownItem = new Option(item.RoomName, item.RoomId);
                            roomDropDown.append(dropdownItem);
                        });

                },
                failure: function(response) {
                    alert("Failure..! Could not Fetch Data using Ajax.");
                },
                error: function(response) {
                    alert("Error..! Could not Fetch Data using Ajax.");
                }
            });
        });

        classDropDown.change(function() {
            $.ajax({
                type: "POST",
                url: "/TermTest/GetGroupValues?classId=" +
                    classDropDown.val() +
                    "&termId=" +
                    parseInt($('#termId').val()),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    groupDropDown.children('option:not(:first)').remove();
                    subjectDropDown.children('option:not(:first)').remove();
                    jQuery.each(response,
                        function(index, item) {
                            var dropdownItem = new Option(item.GroupName, item.GroupId);
                            groupDropDown.append(dropdownItem);
                        });
                    if (firstLoad == true) {
                        groupDropDown.val(@Model.GroupId);
                        groupDropDown.trigger('change');
                    }

                },
                failure: function(response) {
                    alert("Failure..! Could not Fetch Group Data using Ajax.");
                },
                error: function(response) {
                    alert("Error..! Could not Fetch Group Data using Ajax.");
                }
            });
        });

        groupDropDown.change(function() {
            $.ajax({
                type: "POST",
                url: "/TermTest/GetSubjectValues?classId=" +
                    classDropDown.val() +
                    "&groupId=" +
                    groupDropDown.val() +
                    "&termId=" +
                    parseInt($('#termId').val()),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(response) {
                    subjectDropDown.children('option:not(:first)').remove();
                    jQuery.each(response,
                        function(index, item) {
                            var dropdownItem = new Option(item.SubjectName, item.SubjectId);
                            subjectDropDown.append(dropdownItem);
                        });
                    if (firstLoad == true) {
                        subjectDropDown.val(@Model.SubjectId);
                        firstLoad = false;
                    }
                },
                failure: function(response) {
                    alert("Failure..! Could not Fetch Subject Data using Ajax.");
                },
                error: function(response) {
                    alert("Error..! Could not Fetch Subject Data using Ajax.");
                }
            });
        });
  </script>
}
