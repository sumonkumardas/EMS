@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model AddCashVoucherViewModel
@{
    ViewData["Title"] = "AddCashVoucher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-container">
    <!-- BEGIN CONTENT -->
    <div class="page-content-wrapper">
        <div class="page-content">

            <form id="form_sample_3" class="portlet-body form">
                <!-- BEGIN FORM-->
                <div class="title-on-top">@Localizer["AddCashVoucher.CashVoucher"]</div>
                <div class="box-shadow-form">
                    <div class="form-body">
                        <input type="hidden" asp-for="BranchMediumId" runat="server" />
                        <input type="hidden" asp-for="SessionId" runat="server" />
                        <div class="row-fluid col-md-12 zero-padding-row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <label>@Localizer["AddCashVoucher.VoucherNo"]</label>
                                    </div>
                                    <div class="col-md-8">
                                        <input type="text" readonly class="form-control" value="" />
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <label>@Localizer["AddCashVoucher.VoucherDate"]</label>
                                    </div>
                                    <div class="col-md-8">
                                      <input type="text" id="coaDate" value="" class="form-control datepicker" name="COADate">
                                      <span class="badge badge-danger" id="coaDateAlert"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row-fluid col-md-12 zero-padding-row" style="margin-top:15px !important;">
                            <div class="col-md-6">
                                <div class="col-md-4">
                                  <label>@Localizer["AddCashVoucher.TransactionType"]</label><span class="required" aria-required="true">*</span>
                                </div>
                                <div class="form-group col-md-8">
                                    <div id="transactionType"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group pull-right">
                                    <button type="button" id="addrow" class="ibtnDel btn btn-md btn-info ">
                                        <span class="glyphicon glyphicon-plus"></span>
                                    </button>
                                </div>

                            </div>
                            <table id="coaTable" class=" table order-list">
                                <thead class="lite_bg">
                                    <tr>
                                        <th>@Localizer["AddCashVoucher.AccountType"]</th>
                                        <th>@Localizer["AddCashVoucher.AccountHead"]</th>
                                        <th>@Localizer["AddCashVoucher.Amount"]</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>

                            </table>
                        </div>
                        <div class="clearfix"></div>
                        <div class="row-fluid ">
                            <div class="form-group">
                                <label for="Description">@Localizer["AddCashVoucher.Description"]:</label>
                                <textarea class="form-control" rows="5" id="description"></textarea>
                            </div>

                        </div>

                        <div class="btn-container">
                            <button style="margin: 10px auto; width: 82px; display: block;" type="button" class="btn custom-btn custom-cancel-btn" onclick="sendData()">@Localizer["AddCashVoucher.Submit"]</button>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<link href="~/css/dropdowntree.css" rel="stylesheet" />
@section Scripts
    {

    <script src="~/js/dropdowntree.js"></script>
    <script type="text/javascript">
        var rowCount = 0;

        $.ajax({
            type: "GET",
            url: "/Accounting/GetTransactionTypeAndAccountType",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $('#transactionType').empty();
                var cols = "";
                cols += '<select id="transactionTypeCombo' +
                    '"  onchange="transactionTypeComboOnchange(this)" class="form-control" data-val="true" data-val-required="The Transaction Type field is required." name="TransactionType"><option selected = "selected" value = ""> Transaction Type *</option>'
                jQuery.each(response.TransactionTypeList,
                    function (index, item) {
                        cols += ' <option value = "' + item.Value + '">' + item.Name + '</option>';

                    });
                cols += '</select > <span id="transactionTypeAlert' + '" class="badge badge-danger"></span>';

                $("#transactionType").append(cols);
            },
            failure: function (response) {
                console.log(response);
                alert("Failure..! Could not Fetch Data using Ajax.");
            },
            error: function (response) {
                console.log(response);
                alert("Error..! Could not Fetch Data using Ajax.");
            }
        });

        function transactionTypeComboOnchange(data) {
            var id = data.id.split("_")[1];
        }

        function accountTypeComboOnchange(data) {
            var id = data.id.split("_")[1];
            if (data.value != null && data.value != '') {
                $.ajax({
                    type: "GET",
                    url: "/Accounting/GetAccountHeads?rowNumber=" +
                        id +
                        "&accountType=" +
                        data.value +
                        "&branchMediumId=" +
                        ($('#BranchMediumId').val()),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        $("#accountHead_" + id).empty();
                        $("#accountHead_" + id).append(response);
                        $('#tree_'+id).jstree({
                            "core" : {
                                "themes" : {
                                    "responsive": false
                                }            
                            },
                            "types" : {
                                "default" : {
                                    "icon" : "fa fa-folder icon-state-warning icon-lg"
                                },
                                "file" : {
                                    "icon" : "fa fa-file icon-state-warning icon-lg"
                                }
                            },
                            "plugins": ["types"]
                        });
                    },
                    failure: function (response) {
                        console.log(response);
                        alert("Failure..! Could not Fetch Data using Ajax.");
                    },
                    error: function (response) {
                        console.log(response);
                        alert("Error..! Could not Fetch Data using Ajax.");
                    }
                });
            }

        }

        function accountHeadComboOnchange(id, text, nodeId) {

            //$("#accheadCombo_" + id).text(text);
            $("#accheadCombo_" + id).find('a:first').text(text);
            $("#tree_"+id).jstree("close_all");
            $("#accHeadComboSpan_" + id).text(nodeId);
        }

        $("#addrow").on("click",
            function () {

                $.ajax({
                    type: "GET",
                    url: "/Accounting/GetTransactionTypeAndAccountType",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        rowCount++;
                        var newRow = $("<tr id='row_" + rowCount + "'>");
                        var cols = "";

                        cols += '<td class="col-sm-1"><select id="accountType_' +
                            rowCount +
                            '" onchange="accountTypeComboOnchange(this)" class="form-control" data-val="true" data-val-required="The Account Type field is required." name="AccountType"><option selected = "selected" value = ""> Account Type *</option>';

                        jQuery.each(response.AccountTypeList,
                            function (index, item) {
                                cols += ' <option value = "' + item.Value + '">' + item.Name + '</option>';

                            });
                        cols += '</select ><span id="accTypeAlert_' +
                            rowCount +
                            '" class="badge badge-danger"></span></td>'

                        cols += '<td class="col-sm-1" id="accountHead_' + rowCount + '">' + '</td>';

                        cols +=
                            '<td class="col-sm-1"><input type="number" value="0" placeholder="debit" class="form-control" id="amount_' +
                            rowCount +
                            '"/><span id="amountAlert_' +
                            rowCount +
                            '" class="badge badge-danger"></span></td>';

                        cols +=
                            '<td class="col-sm-1"><button type="button"  class="ibtnDel btn btn-md btn-danger"> <span class="glyphicon glyphicon-remove"></span> </button></td >';
                        newRow.append(cols);
                        $("table.order-list").prepend(newRow);
                    },
                    failure: function (response) {
                        console.log(response);
                        alert("Failure..! Could not Fetch Data using Ajax.");
                    },
                    error: function (response) {
                        console.log(response);
                        alert("Error..! Could not Fetch Data using Ajax.");
                    }
                });


            });

        $("table.order-list").on("click",
            ".ibtnDel",
            function (event) {
                $(this).closest("tr").remove();

            });

        function validateEachRow() {

            var coaDateValue = $("#coaDate").val();
            if (coaDateValue == null || coaDateValue == '') {
                $('#coaDateAlert').text("Select Date.");
                return false;
            } else {
                $('#coaDateAlert').text("");
            }

            if ($('#transactionTypeCombo').val() == null || $('#transactionTypeCombo').val() == '') {
                $('#transactionTypeAlert').text("select transaction type.");
                return false;
            } else {
                $('#transactionTypeAlert').text("");
            }

            var table = document.getElementById('coaTable');

            var rowLength = table.rows.length;
            if (rowLength == 1) {
                alert('Please Add atleast a row.');
                return false;
            }

            for (var i = 1; i < rowLength; i += 1) {
                var row = table.rows[i];
                if (row.id.startsWith("row_") == true) {
                    var id = row.id.split("_")[1];


                    if ($('#accountType_' + id).val() == null || $('#accountType_' + id).val() == '') {
                        $('#accTypeAlert_' + id).text("select Account type.");
                        return false;
                    } else {
                        $('#accTypeAlert_' + id).text("");
                    }

                    if ($('#accHeadComboSpan_' + id).text() == null || $('#accHeadComboSpan_' + id).text() == '') {
                        $('#accHeadAlert_' + id).text("select Account Head type.");
                        return false;
                    } else {
                        $('#accHeadAlert_' + id).text("");
                    }

                    if ($('#amount_' + id).val() == null ||
                        $('#amount_' + id).val() == '' ||
                        $('#amount_' + id).val() == '0') {

                        $('#amountAlert_' + id).text("Select Amount");
                        return false;
                    } else {
                        $('#amountAlert_' + id).text("");
                    }


                }
            }

            return true;
        }

        function sendData() {
            if (validateEachRow() == true) {
                var journalList = [];
                var table = document.getElementById('coaTable');
                var rowLength = table.rows.length;
                for (var i = 1; i < rowLength; i += 1) {
                    var row = table.rows[i];
                    if (row.id.startsWith("row_") == true) {
                        var id = row.id.split("_")[1];
                        var journalModel = {
                            AccountHeadId: $('#accHeadComboSpan_' + id).text(),
                            Amount: parseFloat($("#amount_" + id).val()).toFixed(2),
                        };

                        journalList.push(journalModel);
                    }
                }
                var model = {
                    BranchMediumId: $('#BranchMediumId').val(),
                    SessionId: $('#SessionId').val(),
                    TransactionDate: $("#coaDate").val(),
                    Description: $('#description').val(),
                    TransactionEntryType: $('#transactionTypeCombo').val(),
                    TransactionEntries: journalList
                };
                console.log(model);
                $.ajax({
                    type: "POST",
                    url: "/Accounting/AddCashVoucher",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.IsDataPosted == true) {
                            window.location.href = response.RedirectTo;
                        }
                    },
                    failure: function (response) {
                        console.log(response);
                        alert("Failure..! Could not Fetch Data using Ajax.");
                    },
                    error: function (response) {
                        console.log(response);
                        alert("Error..! Could not Fetch Data using Ajax.");
                    }
                });
            }
        }
    </script>
}



