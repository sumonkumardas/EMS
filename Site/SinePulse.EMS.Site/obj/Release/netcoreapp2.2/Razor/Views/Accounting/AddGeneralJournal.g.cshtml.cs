#pragma checksum "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e8db8214fed4fb4f07fec1f2f42b6cc8207f50ba"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Accounting_AddGeneralJournal), @"mvc.1.0.view", @"/Views/Accounting/AddGeneralJournal.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Accounting/AddGeneralJournal.cshtml", typeof(AspNetCore.Views_Accounting_AddGeneralJournal))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\_ViewImports.cshtml"
using SinePulse.EMS.Site;

#line default
#line hidden
#line 2 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\_ViewImports.cshtml"
using SinePulse.EMS.Site.Models;

#line default
#line hidden
#line 2 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e8db8214fed4fb4f07fec1f2f42b6cc8207f50ba", @"/Views/Accounting/AddGeneralJournal.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9011cacf54d8ae45691a3deaab04c36239ace056", @"/Views/_ViewImports.cshtml")]
    public class Views_Accounting_AddGeneralJournal : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<AddGeneralJournalTransactionViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("runat", new global::Microsoft.AspNetCore.Html.HtmlString("server"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_sample_3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("portlet-body form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
  
    ViewData["Title"] = "AddGeneralJournal";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(226, 150, true);
            WriteLiteral("\r\n<div class=\"page-container\">\r\n    <!-- BEGIN CONTENT -->\r\n    <div class=\"page-content-wrapper\">\r\n        <div class=\"page-content\">\r\n\r\n            ");
            EndContext();
            BeginContext(376, 4960, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e8db8214fed4fb4f07fec1f2f42b6cc8207f50ba5655", async() => {
                BeginContext(427, 80, true);
                WriteLiteral("\r\n                <!-- BEGIN FORM-->\r\n                <div class=\"title-on-top\">");
                EndContext();
                BeginContext(508, 50, false);
#line 16 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                     Write(Localizer["AddGeneralJournal.GeneralJournalEntry"]);

#line default
#line hidden
                EndContext();
                BeginContext(558, 124, true);
                WriteLiteral("</div>\r\n                <div class=\"box-shadow-form\">\r\n                    <div class=\"form-body\">\r\n                        ");
                EndContext();
                BeginContext(682, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e8db8214fed4fb4f07fec1f2f42b6cc8207f50ba6700", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#line 19 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.BranchMediumId);

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(745, 26, true);
                WriteLiteral("\r\n                        ");
                EndContext();
                BeginContext(771, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e8db8214fed4fb4f07fec1f2f42b6cc8207f50ba8673", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#line 20 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.SessionId);

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(829, 295, true);
                WriteLiteral(@"
                        <div class=""row-fluid col-md-12 zero-padding-row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <div class=""col-md-4"">
                                        <label>");
                EndContext();
                BeginContext(1125, 44, false);
#line 25 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                          Write(Localizer["AddGeneralJournal.TransactionNo"]);

#line default
#line hidden
                EndContext();
                BeginContext(1169, 555, true);
                WriteLiteral(@"</label>
                                    </div>
                                    <div class=""col-md-8"">
                                        <input type=""text"" readonly class=""form-control"" value="""" />
                                    </div>
                                </div>

                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <div class=""col-md-4"">
                                        <label>");
                EndContext();
                BeginContext(1725, 46, false);
#line 36 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                          Write(Localizer["AddGeneralJournal.TransactionDate"]);

#line default
#line hidden
                EndContext();
                BeginContext(1771, 1272, true);
                WriteLiteral(@"</label>
                                    </div>
                                    <div class=""col-md-8"">
                                      <input type=""text"" id=""coaDate"" value="""" class=""form-control datepicker"" name=""COADate"">
                                      <span class=""badge badge-danger"" id=""coaDateAlert""></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class=""row-fluid col-md-12 zero-padding-row"" style=""margin-top:15px !important;"">

                            <div class=""col-md-12"">
                                <div class=""form-group pull-right"">
                                    <button type=""button"" id=""addrow"" class=""ibtnDel btn btn-md btn-info "">
                                        <span class=""glyphicon glyphicon-plus""></span>
                                    </button>
                                </div>

        ");
                WriteLiteral("                    </div>\r\n                            <table id=\"coaTable\" class=\" table order-list\">\r\n                                <thead class=\"lite_bg\">\r\n                                    <tr>\r\n                                        <th>");
                EndContext();
                BeginContext(3044, 46, false);
#line 59 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                       Write(Localizer["AddGeneralJournal.TransactionType"]);

#line default
#line hidden
                EndContext();
                BeginContext(3090, 51, true);
                WriteLiteral("</th>\r\n                                        <th>");
                EndContext();
                BeginContext(3142, 42, false);
#line 60 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                       Write(Localizer["AddGeneralJournal.AccountType"]);

#line default
#line hidden
                EndContext();
                BeginContext(3184, 51, true);
                WriteLiteral("</th>\r\n                                        <th>");
                EndContext();
                BeginContext(3236, 42, false);
#line 61 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                       Write(Localizer["AddGeneralJournal.AccountHead"]);

#line default
#line hidden
                EndContext();
                BeginContext(3278, 51, true);
                WriteLiteral("</th>\r\n                                        <th>");
                EndContext();
                BeginContext(3330, 36, false);
#line 62 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                       Write(Localizer["AddGeneralJournal.Debit"]);

#line default
#line hidden
                EndContext();
                BeginContext(3366, 51, true);
                WriteLiteral("</th>\r\n                                        <th>");
                EndContext();
                BeginContext(3418, 37, false);
#line 63 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                       Write(Localizer["AddGeneralJournal.Credit"]);

#line default
#line hidden
                EndContext();
                BeginContext(3455, 375, true);
                WriteLiteral(@"</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td><b>");
                EndContext();
                BeginContext(3831, 36, false);
#line 71 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                          Write(Localizer["AddGeneralJournal.Total"]);

#line default
#line hidden
                EndContext();
                BeginContext(3867, 814, true);
                WriteLiteral(@"</b></td>
                                        <td><input type=""number"" disabled placeholder=""debit"" class=""form-control"" id=""totalDebit"" value=""0.00"" /><span id=""totalDeditAlert"" class=""badge badge-danger""></span></td>
                                        <td><input type=""number"" disabled placeholder=""credit"" class=""form-control"" id=""totalCredit"" value=""0.00"" /><span id=""totalCreditAlert"" class=""badge badge-danger""></span></td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                        <div class=""clearfix""></div>
                        <div class=""row-fluid "">
                            <div class=""form-group"">
                                <label for=""Description"">");
                EndContext();
                BeginContext(4682, 42, false);
#line 82 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                                    Write(Localizer["AddGeneralJournal.Description"]);

#line default
#line hidden
                EndContext();
                BeginContext(4724, 406, true);
                WriteLiteral(@":</label>
                                <textarea class=""form-control"" rows=""5"" id=""description""></textarea>
                            </div>

                        </div>

                        <div class=""btn-container"">
                            <button style=""margin: 10px auto; width: 82px; display: block;"" type=""button"" class=""btn custom-btn custom-cancel-btn"" onclick=""sendData()"">");
                EndContext();
                BeginContext(5131, 37, false);
#line 89 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\Accounting\AddGeneralJournal.cshtml"
                                                                                                                                                                   Write(Localizer["AddGeneralJournal.Submit"]);

#line default
#line hidden
                EndContext();
                BeginContext(5168, 161, true);
                WriteLiteral("</button>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5336, 44, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(5403, 15015, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        var rowCount = 0;

        function addTotalDebitCredit() {
            var table = document.getElementById('coaTable');

            var rowLength = table.rows.length;
            var totalDebit = parseFloat(0);
            var totalCredit = parseFloat(0);
            for (var i = 1; i < rowLength - 1; i += 1) {
                var row = table.rows[i];
                if (row.id.startsWith(""row_"") == true) {
                    var id = row.id.split(""_"")[1];
                    //console.log(isNaN($(""#debit_"" + id).val()));

                    var debitValue = $(""#debit_"" + id).val();
                    if (parseFloat(debitValue) != 'NaN' && debitValue != null && debitValue != '') {
                        var rowDebit = parseFloat(debitValue).toFixed(2);
                        totalDebit = parseFloat(parseFloat(totalDebit) + parseFloat(rowDebit)).toFixed(2);
                    }

                    var creditValue = $(""#credit_"" + id)");
                WriteLiteral(@".val();
                    if (parseFloat(creditValue) != 'NaN' && creditValue != null && creditValue != '') {
                        var rowCredit = parseFloat(creditValue).toFixed(2);
                        totalCredit = parseFloat(parseFloat(totalCredit) + parseFloat(rowCredit)).toFixed(2);
                    }
                }


            }

            $(""#totalDebit"").val(totalDebit);
            $(""#totalCredit"").val(totalCredit);
        }

        function setDebitCreditNull(id) {
            $(""#credit_"" + id).val(0.00);
            $(""#debit_"" + id).val(0.00);
        }

        function transactionTypeComboOnchange(data) {
            var id = data.id.split(""_"")[1];

            if (data.value == 1) {
                $(""#credit_"" + id).attr(""disabled"", ""disabled"");
                $(""#debit_"" + id).removeAttr(""disabled"");
                $(""#accountType_"" + id).removeAttr(""disabled"");
                setDebitCreditNull(id);
                addTotalDebitCredit();
");
                WriteLiteral(@"
            } else if (data.value == 2) {
                $(""#debit_"" + id).attr(""disabled"", ""disabled"");
                $(""#credit_"" + id).removeAttr(""disabled"");
                $(""#accountType_"" + id).removeAttr(""disabled"");
                setDebitCreditNull(id);
                addTotalDebitCredit();
            } else {
                $(""#debit_"" + id).attr(""disabled"", ""disabled"");
                $(""#credit_"" + id).attr(""disabled"", ""disabled"");
                $(""#accountType_"" + id).attr(""disabled"", ""disabled"");
                setDebitCreditNull(id);
            }

            console.log(data.value);
        }

        function accountTypeComboOnchange(data) {
            var id = data.id.split(""_"")[1];
            if (data.value != null && data.value != '') {
                $.ajax({
                    type: ""GET"",
                    url: ""/Accounting/GetAccountHeads?rowNumber="" +
                        id +
                        ""&accountType="" +
                  ");
                WriteLiteral(@"      data.value +
                        ""&branchMediumId="" +
                        ($('#BranchMediumId').val()),
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (response) {

                        $(""#accountHead_"" + id).empty();
                        $(""#accountHead_"" + id).append(response);
                        $('#tree_'+id).jstree({
                            ""core"" : {
                                ""themes"" : {
                                    ""responsive"": false
                                }            
                            },
                            ""types"" : {
                                ""default"" : {
                                    ""icon"" : ""fa fa-folder icon-state-warning icon-lg""
                                },
                                ""file"" : {
                                    ""icon"" : ""fa fa-file icon-state-warning icon-lg""
   ");
                WriteLiteral(@"                             }
                            },
                            ""plugins"": [""types""]
                        });
                    },
                    failure: function (response) {
                        console.log(response);
                        alert(""Failure..! Could not Fetch Data using Ajax."");
                    },
                    error: function (response) {
                        console.log(response);
                        alert(""Error..! Could not Fetch Data using Ajax."");
                    }
                });
            }

        }

        function accountHeadComboOnchange(id, text, nodeId) {

            //$(""#accheadCombo_"" + id).text(text);
            $(""#accheadCombo_"" + id).find('a:first').text(text);
            $(""#tree_"" + id).jstree(""close_all"");
            $(""#accHeadComboSpan_"" + id).text(nodeId);
        }

        $(""#addrow"").on(""click"",
            function () {

                $.ajax({
             ");
                WriteLiteral(@"       type: ""GET"",
                    url: ""/Accounting/GetTransactionTypeAndAccountType"",
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (response) {
                        console.log(response);
                        rowCount++;
                        var newRow = $(""<tr id='row_"" + rowCount + ""'>"");
                        var cols = """";
                        cols += '<td class=""col-sm-1""><select id=""transactionType_' +
                            rowCount +
                            '""  onchange=""transactionTypeComboOnchange(this)"" class=""form-control"" data-val=""true"" data-val-required=""The Transaction Type field is required."" name=""TransactionType""><option selected = ""selected"" value = """"> Transaction Type *</option>'
                        jQuery.each(response.TransactionTypeList,
                            function (index, item) {
                                cols += ' <option v");
                WriteLiteral(@"alue = ""' + item.Value + '"">' + item.Name + '</option>';

                            });
                        cols += '</select > <span id=""transactionTypeAlert_' +
                            rowCount +
                            '"" class=""badge badge-danger""></span></td >'

                        cols += '<td class=""col-sm-1""><select disabled id=""accountType_' +
                            rowCount +
                            '"" onchange=""accountTypeComboOnchange(this)"" class=""form-control"" data-val=""true"" data-val-required=""The Account Type field is required."" name=""AccountType""><option selected = ""selected"" value = """"> Account Type *</option>';

                        jQuery.each(response.AccountTypeList,
                            function (index, item) {
                                cols += ' <option value = ""' + item.Value + '"">' + item.Name + '</option>';

                            });
                        cols += '</select ><span id=""accTypeAlert_' +
               ");
                WriteLiteral(@"             rowCount +
                            '"" class=""badge badge-danger""></span></td>'

                        cols += '<td class=""col-sm-1"" id=""accountHead_' + rowCount + '"">' + '</td>';

                        cols +=
                            '<td class=""col-sm-1""><input type=""number"" disabled placeholder=""debit"" class=""form-control"" onfocusout=""addTotalDebitCredit()""  id=""debit_' +
                            rowCount +
                            '""/><span id=""debitAlert_' +
                            rowCount +
                            '"" class=""badge badge-danger""></span></td>';
                        cols +=
                            '<td class=""col-sm-1""><input type=""number"" disabled placeholder=""credit"" class=""form-control"" onfocusout=""addTotalDebitCredit()""  id=""credit_' +
                            rowCount +
                            '""/><span id=""creditAlert_' +
                            rowCount +
                            '"" class=""badge badge-danger""");
                WriteLiteral(@"></span></td>';

                        cols +=
                            '<td class=""col-sm-1""><button type=""button""  class=""ibtnDel btn btn-md btn-danger""> <span class=""glyphicon glyphicon-remove""></span> </button></td >';
                        newRow.append(cols);
                        $(""table.order-list"").prepend(newRow);
                    },
                    failure: function (response) {
                        console.log(response);
                        alert(""Failure..! Could not Fetch Data using Ajax."");
                    },
                    error: function (response) {
                        console.log(response);
                        alert(""Error..! Could not Fetch Data using Ajax."");
                    }
                });


            });

        $(""table.order-list"").on(""click"",
            "".ibtnDel"",
            function (event) {
                $(this).closest(""tr"").remove();
                addTotalDebitCredit();

            });

   ");
                WriteLiteral(@"     function validateEachRow() {

            var coaDateValue = $(""#coaDate"").val();
            if (coaDateValue == null || coaDateValue == '') {
                $('#coaDateAlert').text(""Select Date."");
                return false;
            } else {
                $('#coaDateAlert').text("""");
            }

            var totalDebitValue = $(""#totalDebit"").val();
            var totalCreditValue = $(""#totalCredit"").val();

            if ((parseFloat(totalDebitValue).toFixed(2) - parseFloat(totalCreditValue).toFixed(2)) != 0) {

                $('#totalDeditAlert').text(""Total Debit and Total Credit doesn't match"");
                return false;
            } else {
                $('#totalDeditAlert').text("""");
            }

            if (parseFloat(totalDebitValue).toFixed(2) == 0 && parseFloat(totalCreditValue).toFixed(2) == 0) {

                $('#totalDeditAlert').text(""Total debit and credit both cannot be zero."");
                return false;
            } else");
                WriteLiteral(@" {
                $('#totalDeditAlert').text("""");
            }
            var table = document.getElementById('coaTable');

            var rowLength = table.rows.length;
            var totalDebit = 0;
            var totalCredit = 0;
            for (var i = 1; i < rowLength - 1; i += 1) {
                var row = table.rows[i];
                if (row.id.startsWith(""row_"") == true) {
                    var id = row.id.split(""_"")[1];

                    if ($('#transactionType_' + id).val() == null || $('#transactionType_' + id).val() == '') {
                        $('#transactionTypeAlert_' + id).text(""select transaction type."");
                        return false;
                    } else {
                        $('#transactionTypeAlert_' + id).text("""");
                    }

                    if ($('#accountType_' + id).val() == null || $('#accountType_' + id).val() == '') {
                        $('#accTypeAlert_' + id).text(""select Account type."");
             ");
                WriteLiteral(@"           return false;
                    } else {
                        $('#accTypeAlert_' + id).text("""");
                    }

                    if ($('#accHeadComboSpan_' + id).text() == null || $('#accHeadComboSpan_' + id).text() == '') {
                        $('#accHeadAlert_' + id).text(""select Account Head type."");
                        return false;
                    } else {
                        $('#accHeadAlert_' + id).text("""");
                    }

                    if ($('#debit_' + id).val() == null || $('#debit_' + id).val() == '') {
                        if ($('#transactionType_' + id).val() == 1) {
                            $('#debitAlert_' + id).text(""Select Debit"");
                            return false;
                        }
                    } else {
                        $('#debitAlert_' + id).text("""");
                    }

                    if ($('#credit_' + id).val() == null || $('#credit_' + id).val() == '') {
           ");
                WriteLiteral(@"             if ($('#transactionType_' + id).val() == 2) {
                            $('#creditAlert_' + id).text(""Select Credit"");
                            return false;
                        }
                    } else {
                        $('#creditAlert_' + id).text("""");
                    }


                }
            }

            return true;
        }

        function sendData() {
            if (validateEachRow() == true) {
                var journalList = [];
                var table = document.getElementById('coaTable');
                var rowLength = table.rows.length;
                var totalDebit = 0;
                var totalCredit = 0;
                for (var i = 1; i < rowLength - 1; i += 1) {
                    var row = table.rows[i];
                    if (row.id.startsWith(""row_"") == true) {
                        var id = row.id.split(""_"")[1];
                        var journalModel = {
                            AccountHeadId: $('");
                WriteLiteral(@"#accHeadComboSpan_' + id).text(),
                            DebitAmount: parseFloat($(""#debit_"" + id).val()).toFixed(2),
                            CreditAmount: parseFloat($(""#credit_"" + id).val()).toFixed(2)
                        };

                        journalList.push(journalModel);
                    }
                }
                var model = {
                    BranchMediumId: $('#BranchMediumId').val(),
                    SessionId: $('#SessionId').val(),
                    TransactionDate: $(""#coaDate"").val(),
                    Description: $('#description').val(),
                    TransactionEntries: journalList
                };
                console.log(model);
                $.ajax({
                    type: ""POST"",
                    url: ""/Accounting/AddGeneralJournal"",
                    data: JSON.stringify(model),
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    su");
                WriteLiteral(@"ccess: function (response) {
                        if (response.IsDataPosted == true) {
                            window.location.href = response.RedirectTo;
                        }
                    },
                    failure: function (response) {
                        console.log(response);
                        alert(""Failure..! Could not Fetch Data using Ajax."");
                    },
                    error: function (response) {
                        console.log(response);
                        alert(""Error..! Could not Fetch Data using Ajax."");
                    }
                });
            }
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(20421, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<AddGeneralJournalTransactionViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
