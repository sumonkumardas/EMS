#pragma checksum "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c6ec361c2f13668622e957e963180ff953549f33"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_BranchMedium_ViewAccount), @"mvc.1.0.view", @"/Views/BranchMedium/ViewAccount.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/BranchMedium/ViewAccount.cshtml", typeof(AspNetCore.Views_BranchMedium_ViewAccount))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\_ViewImports.cshtml"
using SinePulse.EMS.Site;

#line default
#line hidden
#line 2 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\_ViewImports.cshtml"
using SinePulse.EMS.Site.Models;

#line default
#line hidden
#line 1 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
using SinePulse.EMS.Domain.Features;

#line default
#line hidden
#line 3 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c6ec361c2f13668622e957e963180ff953549f33", @"/Views/BranchMedium/ViewAccount.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9011cacf54d8ae45691a3deaab04c36239ace056", @"/Views/_ViewImports.cshtml")]
    public class Views_BranchMedium_ViewAccount : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<AccountDisplayModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("branchMediumIdOfViewAccount"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("runat", new global::Microsoft.AspNetCore.Html.HtmlString("server"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_sample_3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 5 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
  
    ViewData["Title"] = "ViewAccount";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(240, 918, true);
            WriteLiteral(@"<div class=""page-container"">
    <!-- BEGIN CONTENT -->
    <div class=""page-content-wrapper"">
        <div class=""page-content"">
            <div class=""profile-content"">
                <div class=""row"">
                    <div class=""col-md-12"">

                        <!-- BEGIN PROFILE SIDEBAR -->
                        <div class=""profile-sidebar"">
                            <!-- PORTLET MAIN -->
                            <div class=""portlet light profile-sidebar-portlet"">
                                <!-- SIDEBAR USERPIC -->
                                <div class=""profile-userpic"">
                                    <img src=""../../img/school.png"" class=""img-responsive"" alt="""">
                                </div>
                                <!-- END SIDEBAR USERPIC -->
                                <!-- SIDEBAR USER TITLE -->
                                ");
            EndContext();
            BeginContext(1158, 130, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c6ec361c2f13668622e957e963180ff953549f337083", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
#line 27 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => Model.AccountDisplayBranchMedium.BranchMediumId);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1288, 284, true);
            WriteLiteral(@"
                                <div class=""profile-usertitle-name small-title"">
                                    Account View
                                </div>
                                <hr />
                                <div class=""profile-usertitle-name"">
");
            EndContext();
#line 33 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                     if (Model.HasPermission(Feature.InstituteEnum.ViewInstitute.ToString()))
                                    {

#line default
#line hidden
            BeginContext(1722, 63, true);
            WriteLiteral("                                        <a class=\"primary-link\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 1785, "\"", 1871, 2);
            WriteAttributeValue("", 1792, "/Institute/ViewInstitute?instituteId=", 1792, 37, true);
#line 35 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 1829, Model.AccountDisplayInstitute.InstituteId, 1829, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1872, 47, true);
            WriteLiteral(">\r\n                                            ");
            EndContext();
            BeginContext(1920, 69, false);
#line 36 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                       Write(Html.DisplayFor(model => model.AccountDisplayInstitute.InstituteName));

#line default
#line hidden
            EndContext();
            BeginContext(1989, 48, true);
            WriteLiteral("\r\n                                        </a>\r\n");
            EndContext();
#line 38 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                    }
                                    else
                                    {
                                        

#line default
#line hidden
            BeginContext(2198, 69, false);
#line 41 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                   Write(Html.DisplayFor(model => model.AccountDisplayInstitute.InstituteName));

#line default
#line hidden
            EndContext();
#line 41 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                              
                                    }

#line default
#line hidden
            BeginContext(2308, 141, true);
            WriteLiteral("                                </div>\r\n                                <div class=\"profile-stat-text\">\r\n                                    ");
            EndContext();
            BeginContext(2450, 34, false);
#line 45 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                               Write(Localizer["ViewAccount.Institute"]);

#line default
#line hidden
            EndContext();
            BeginContext(2484, 154, true);
            WriteLiteral("\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div class=\"profile-usertitle-name\">\r\n");
            EndContext();
#line 50 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                     if (Model.HasPermission(Feature.BranchEnum.ViewBranch.ToString()))
                                    {

#line default
#line hidden
            BeginContext(2782, 63, true);
            WriteLiteral("                                        <a class=\"primary-link\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 2845, "\"", 2916, 2);
            WriteAttributeValue("", 2852, "/Branch/ViewBranch?branchId=", 2852, 28, true);
#line 52 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 2880, Model.AccountDisplayBranch.BranchId, 2880, 36, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2917, 47, true);
            WriteLiteral(">\r\n                                            ");
            EndContext();
            BeginContext(2965, 63, false);
#line 53 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                       Write(Html.DisplayFor(model => model.AccountDisplayBranch.BranchName));

#line default
#line hidden
            EndContext();
            BeginContext(3028, 48, true);
            WriteLiteral("\r\n                                        </a>\r\n");
            EndContext();
#line 55 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                    }
                                    else
                                    {
                                        

#line default
#line hidden
            BeginContext(3237, 63, false);
#line 58 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                   Write(Html.DisplayFor(model => model.AccountDisplayBranch.BranchName));

#line default
#line hidden
            EndContext();
#line 58 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                        
                                    }

#line default
#line hidden
            BeginContext(3341, 141, true);
            WriteLiteral("                                </div>\r\n                                <div class=\"profile-stat-text\">\r\n                                    ");
            EndContext();
            BeginContext(3483, 31, false);
#line 62 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                               Write(Localizer["ViewAccount.Branch"]);

#line default
#line hidden
            EndContext();
            BeginContext(3514, 154, true);
            WriteLiteral("\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div class=\"profile-usertitle-name\">\r\n");
            EndContext();
#line 67 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                     if (Model.HasPermission(Feature.BranchMediumEnum.ViewBranchMedium.ToString()))
                                    {

#line default
#line hidden
            BeginContext(3824, 63, true);
            WriteLiteral("                                        <a class=\"primary-link\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 3887, "\"", 3988, 2);
            WriteAttributeValue("", 3894, "/BranchMedium/ViewBranchMedium?branchMediumId=", 3894, 46, true);
#line 69 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 3940, Model.AccountDisplayBranchMedium.BranchMediumId, 3940, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3989, 47, true);
            WriteLiteral(">\r\n                                            ");
            EndContext();
            BeginContext(4037, 75, false);
#line 70 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                       Write(Html.DisplayFor(model => model.AccountDisplayBranchMedium.BranchMediumName));

#line default
#line hidden
            EndContext();
            BeginContext(4112, 48, true);
            WriteLiteral("\r\n                                        </a>\r\n");
            EndContext();
#line 72 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                    }
                                    else
                                    {
                                        

#line default
#line hidden
            BeginContext(4321, 75, false);
#line 75 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                   Write(Html.DisplayFor(model => model.AccountDisplayBranchMedium.BranchMediumName));

#line default
#line hidden
            EndContext();
#line 75 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                    
                                    }

#line default
#line hidden
            BeginContext(4437, 141, true);
            WriteLiteral("                                </div>\r\n                                <div class=\"profile-stat-text\">\r\n                                    ");
            EndContext();
            BeginContext(4579, 31, false);
#line 79 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                               Write(Localizer["ViewAccount.Medium"]);

#line default
#line hidden
            EndContext();
            BeginContext(4610, 190, true);
            WriteLiteral("\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div class=\"profile-usertitle-name\">\r\n                                    ");
            EndContext();
            BeginContext(4801, 68, false);
#line 84 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                               Write(Html.DisplayFor(model => model.AccountDisplayBranchMedium.ShiftName));

#line default
#line hidden
            EndContext();
            BeginContext(4869, 143, true);
            WriteLiteral("\r\n                                </div>\r\n                                <div class=\"profile-stat-text\">\r\n                                    ");
            EndContext();
            BeginContext(5013, 30, false);
#line 87 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                               Write(Localizer["ViewAccount.Shift"]);

#line default
#line hidden
            EndContext();
            BeginContext(5043, 1825, true);
            WriteLiteral(@"
                                </div>
                                <hr />

                                <!-- END SIDEBAR USER TITLE -->
                            </div>
                            <!-- END PORTLET MAIN -->

                        </div>
                        <!-- END BEGIN PROFILE SIDEBAR -->
                        <!-- BEGIN PROFILE CONTENT -->
                        <div class=""profile-content"">
                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <!-- BEGIN PORTLET -->
                                    <div class=""portlet light"">
                                        <div class=""portlet-title tabbable-line"">
                                            <div class=""page-toolbar custom-page-menu-bar"">
                                                <div class=""btn-group"">
                                                    <ul style=""padding:0px;"">

                    ");
            WriteLiteral(@"                                    <li class=""custom-page-menu dropdown primary-menu-item-li"">
                                                            <a href=""#"" class=""show-dropdown-on-hover"" data-toggle=""custom-page-menu"">
                                                                <button type=""button"" class=""btn btn-fit-height dark-bg dropdown-toggle"" data-toggle=""dropdown"" data-hover=""dropdown"" data-delay=""100"" data-close-others=""true"">
                                                                    <i class=""fa fa-bars""></i>
                                                                </button>
                                                            </a>
                                                            <ul class=""dropdown-menu light-arrow-only"">
");
            EndContext();
#line 115 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 if (Model.HasPermission(Feature.AccountingEnum.CashVoucher.ToString()))
                                                                {

#line default
#line hidden
            BeginContext(7073, 74, true);
            WriteLiteral("                                                                    <li><a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 7147, "\"", 7244, 2);
            WriteAttributeValue("", 7154, "/Accounting/AddCashVoucher?branchMediumId=", 7154, 42, true);
#line 117 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 7196, Model.AccountDisplayBranchMedium.BranchMediumId, 7196, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7245, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(7247, 36, false);
#line 117 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                                                                        Write(Localizer["ViewAccount.CashVoucher"]);

#line default
#line hidden
            EndContext();
            BeginContext(7283, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 118 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(7361, 64, true);
            WriteLiteral("                                                                ");
            EndContext();
#line 119 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 if (Model.HasPermission(Feature.AccountingEnum.BankVoucher.ToString()))
                                                                {

#line default
#line hidden
            BeginContext(7566, 74, true);
            WriteLiteral("                                                                    <li><a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 7640, "\"", 7737, 2);
            WriteAttributeValue("", 7647, "/Accounting/AddBankVoucher?branchMediumId=", 7647, 42, true);
#line 121 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 7689, Model.AccountDisplayBranchMedium.BranchMediumId, 7689, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7738, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(7740, 36, false);
#line 121 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                                                                        Write(Localizer["ViewAccount.BankVoucher"]);

#line default
#line hidden
            EndContext();
            BeginContext(7776, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 122 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(7854, 64, true);
            WriteLiteral("                                                                ");
            EndContext();
#line 123 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 if (Model.HasPermission(Feature.AccountingEnum.GeneralJournal.ToString()))
                                                                {

#line default
#line hidden
            BeginContext(8062, 74, true);
            WriteLiteral("                                                                    <li><a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 8136, "\"", 8236, 2);
            WriteAttributeValue("", 8143, "/Accounting/AddGeneralJournal?branchMediumId=", 8143, 45, true);
#line 125 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 8188, Model.AccountDisplayBranchMedium.BranchMediumId, 8188, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(8237, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(8239, 39, false);
#line 125 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                                                                           Write(Localizer["ViewAccount.GeneralJournal"]);

#line default
#line hidden
            EndContext();
            BeginContext(8278, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 126 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(8356, 64, true);
            WriteLiteral("                                                                ");
            EndContext();
#line 127 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 if (Model.HasPermission(Feature.AccountingEnum.ContraJournal.ToString()))
                                                                {

#line default
#line hidden
            BeginContext(8563, 74, true);
            WriteLiteral("                                                                    <li><a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 8637, "\"", 8736, 2);
            WriteAttributeValue("", 8644, "/Accounting/AddContraJournal?branchMediumId=", 8644, 44, true);
#line 129 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 8688, Model.AccountDisplayBranchMedium.BranchMediumId, 8688, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(8737, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(8739, 38, false);
#line 129 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                                                                          Write(Localizer["ViewAccount.ContraJournal"]);

#line default
#line hidden
            EndContext();
            BeginContext(8777, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 130 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(8855, 64, true);
            WriteLiteral("                                                                ");
            EndContext();
#line 131 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 if (Model.HasPermission(Feature.AccountingEnum.YearClosing.ToString()))
                                                                {

#line default
#line hidden
            BeginContext(9060, 84, true);
            WriteLiteral("                                                                    <li><a href=\"#\">");
            EndContext();
            BeginContext(9145, 36, false);
#line 133 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                               Write(Localizer["ViewAccount.YearClosing"]);

#line default
#line hidden
            EndContext();
            BeginContext(9181, 11, true);
            WriteLiteral("</a></li>\r\n");
            EndContext();
#line 134 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(9259, 665, true);
            WriteLiteral(@"                                                            </ul>
                                                        </li>
                                                    </ul>

                                                </div>
                                            </div>

                                            <ul class=""nav nav-tabs custom-page-tab"">
                                                <li class=""active"">
                                                    <a href=""#tab_1_1"" data-toggle=""tab"">
                                                        <h5 class=""caption-subject font-blue-madison bold uppercase"">");
            EndContext();
            BeginContext(9925, 36, false);
#line 145 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                Write(Localizer["ViewAccount.Transaction"]);

#line default
#line hidden
            EndContext();
            BeginContext(9961, 415, true);
            WriteLiteral(@"</h5>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href=""#tab_1_2"" data-toggle=""tab"" onclick=""renderChartOfAccount()"">
                                                        <h5 class=""caption-subject font-blue-madison bold uppercase"">");
            EndContext();
            BeginContext(10377, 39, false);
#line 150 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                Write(Localizer["ViewAccount.ChartofAccount"]);

#line default
#line hidden
            EndContext();
            BeginContext(10416, 413, true);
            WriteLiteral(@"</h5>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href=""#tab_1_3"" data-toggle=""tab"" onclick=""renderTrialBalance()"">
                                                        <h5 class=""caption-subject font-blue-madison bold uppercase"">");
            EndContext();
            BeginContext(10830, 38, false);
#line 155 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                Write(Localizer["ViewAccount.TrialBanalnce"]);

#line default
#line hidden
            EndContext();
            BeginContext(10868, 416, true);
            WriteLiteral(@"</h5>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href=""#tab_1_4"" data-toggle=""tab"" onclick=""renderIncomeStatement()"">
                                                        <h5 class=""caption-subject font-blue-madison bold uppercase"">");
            EndContext();
            BeginContext(11285, 40, false);
#line 160 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                Write(Localizer["ViewAccount.IncomeStatement"]);

#line default
#line hidden
            EndContext();
            BeginContext(11325, 413, true);
            WriteLiteral(@"</h5>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href=""#tab_1_5"" data-toggle=""tab"" onclick=""renderBalanceSheet()"">
                                                        <h5 class=""caption-subject font-blue-madison bold uppercase"">");
            EndContext();
            BeginContext(11739, 38, false);
#line 165 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                Write(Localizer["ViewAccount.BanalnceSheet"]);

#line default
#line hidden
            EndContext();
            BeginContext(11777, 836, true);
            WriteLiteral(@"</h5>
                                                    </a>
                                                </li>

                                            </ul>


                                        </div>
                                        <div class=""portlet-body"">
                                            <!--BEGIN TABS-->
                                            <div class=""tab-content"">
                                                <div class=""tab-pane active"" id=""tab_1_1"">
                                                    <div style=""min-height: 320px;"">
                                                        <div class=""form-group"">
                                                            <div class=""col-md-12"">
                                                                ");
            EndContext();
            BeginContext(12613, 2073, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c6ec361c2f13668622e957e963180ff953549f3337556", async() => {
                BeginContext(12638, 172, true);
                WriteLiteral("\r\n                                                                    <div class=\"col-md-2\">\r\n                                                                      <label> ");
                EndContext();
                BeginContext(12811, 34, false);
#line 182 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                         Write(Localizer["ViewAccount.StartDate"]);

#line default
#line hidden
                EndContext();
                BeginContext(12845, 759, true);
                WriteLiteral(@"</label><span class=""required"">*</span>
                                                                    </div>
                                                                    <div class=""col-md-3"">

                                                                        <input id=""transactionStartDate"" type=""text"" class=""form-control datepicker"" name=""Date"">

                                                                        <span id=""transactionStartDateError"" class=""text-danger""></span>
                                                                    </div>
                                                                    <div class=""col-md-2"">
                                                                      <label>");
                EndContext();
                BeginContext(13605, 32, false);
#line 191 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                        Write(Localizer["ViewAccount.EndDate"]);

#line default
#line hidden
                EndContext();
                BeginContext(13637, 850, true);
                WriteLiteral(@" </label><span class=""required"">*</span>
                                                                    </div>
                                                                    <div class=""col-md-3"">
                                                                        <input id=""transactionEndDate"" type=""text"" class=""form-control datepicker"" name=""Date"">
                                                                        <span id=""transactionEndDateError"" class=""text-danger""></span>
                                                                    </div>
                                                                    <div class=""col-md-2"">
                                                                        <button type=""button"" onclick=""showTransactions()"" class=""btn custom-btn custom-cancel-btn pull-right"">");
                EndContext();
                BeginContext(14488, 40, false);
#line 198 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                                                                                                                          Write(Localizer["ViewAccount.CashVoucherShow"]);

#line default
#line hidden
                EndContext();
                BeginContext(14528, 151, true);
                WriteLiteral("</button>\r\n                                                                    </div>\r\n                                                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14686, 554, true);
            WriteLiteral(@"
                                                            </div>

                                                        </div>
                                                        <br /><br /><br />
                                                        <table id=""transactionTable"" class="" table order-list"">
                                                            <thead class=""lite_bg"">
                                                                <tr>

                                                                    <th>");
            EndContext();
            BeginContext(15241, 38, false);
#line 209 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                   Write(Localizer["ViewAccount.TransactionNo"]);

#line default
#line hidden
            EndContext();
            BeginContext(15279, 79, true);
            WriteLiteral("</th>\r\n                                                                    <th>");
            EndContext();
            BeginContext(15359, 36, false);
#line 210 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                   Write(Localizer["ViewAccount.Description"]);

#line default
#line hidden
            EndContext();
            BeginContext(15395, 79, true);
            WriteLiteral("</th>\r\n                                                                    <th>");
            EndContext();
            BeginContext(15475, 40, false);
#line 211 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                   Write(Localizer["ViewAccount.TransactionDate"]);

#line default
#line hidden
            EndContext();
            BeginContext(15515, 298, true);
            WriteLiteral(@"</th>
                                                                    <th></th>
                                                                </tr>

                                                            </thead>
                                                            <tbody>
");
            EndContext();
#line 217 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                 foreach (var transactionEntryModel in Model.Transactions)
                                                                {

#line default
#line hidden
            BeginContext(16004, 230, true);
            WriteLiteral("                                                                    <tr>\r\n\r\n                                                                        <td>\r\n                                                                            ");
            EndContext();
            BeginContext(16235, 62, false);
#line 222 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                       Write(Html.DisplayFor(model => @transactionEntryModel.TransactionNo));

#line default
#line hidden
            EndContext();
            BeginContext(16297, 235, true);
            WriteLiteral("\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            ");
            EndContext();
            BeginContext(16533, 60, false);
#line 225 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                       Write(Html.DisplayFor(model => @transactionEntryModel.Description));

#line default
#line hidden
            EndContext();
            BeginContext(16593, 235, true);
            WriteLiteral("\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            ");
            EndContext();
            BeginContext(16829, 64, false);
#line 228 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                       Write(Html.DisplayFor(model => @transactionEntryModel.TransactionDate));

#line default
#line hidden
            EndContext();
            BeginContext(16893, 237, true);
            WriteLiteral("\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 17130, "\"", 17268, 4);
            WriteAttributeValue("", 17137, "/Accounting/ShowTransaction?transactionId=", 17137, 42, true);
#line 231 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 17179, transactionEntryModel.Id, 17179, 25, false);

#line default
#line hidden
            WriteAttributeValue("", 17204, "&branchMediumId=", 17204, 16, true);
#line 231 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
WriteAttributeValue("", 17220, Model.AccountDisplayBranchMedium.BranchMediumId, 17220, 48, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(17269, 218, true);
            WriteLiteral(" class=\"action-link\"><i class=\"fa fa-eye action-icon\"></i></a>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n");
            EndContext();
#line 234 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                                                }

#line default
#line hidden
            BeginContext(17554, 3266, true);
            WriteLiteral(@"
                                                            </tbody>

                                                        </table>
                                                    </div>
                                                </div>
                                                <div class=""tab-pane"" id=""tab_1_2"">
                                                    <div style=""min-height: 320px;"" id=""displayAddAccountHeadPage"">
                                                        <div>
                                                            <i class=""fa fa-circle-o-notch fa-spin"" style=""font-size:48px""></i>
                                                        </div>


                                                    </div>
                                                </div>
                                                <div class=""tab-pane"" id=""tab_1_3"">
                                                    <div style=""min-height: 320px;"" id=""displayTrialBalan");
            WriteLiteral(@"cePage"">
                                                        <div>
                                                            <i class=""fa fa-circle-o-notch fa-spin"" style=""font-size:48px""></i>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class=""tab-pane"" id=""tab_1_4"">
                                                    <div style=""min-height: 320px;"" id=""displayIncomeStatementPage"">
                                                        <div>
                                                            <i class=""fa fa-circle-o-notch fa-spin"" style=""font-size:48px""></i>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class=""tab");
            WriteLiteral(@"-pane"" id=""tab_1_5"">
                                                    <div style=""min-height: 320px;"">
                                                        <div style=""min-height: 320px;"" id=""displayBalanceSheetPage"">
                                                            <div>
                                                                <i class=""fa fa-circle-o-notch fa-spin"" style=""font-size:48px""></i>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <!--END TABS-->
                                        </div>
                                    </div>
                                    <!-- END PORTLET -->
                                </div>
                            </div>
      ");
            WriteLiteral("                  </div>\r\n                        <!-- END PROFILE CONTENT -->\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(20839, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(20845, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c6ec361c2f13668622e957e963180ff953549f3352830", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(20887, 4842, true);
                WriteLiteral(@"

    <script type=""text/javascript"">

        function resetShowHideBar() {
            $('.ui-button-text').text(""Show Bar"");
            $("".myUL li"").css('border-bottom', '');
        }

        function viewNode(nodeId) {
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/GetAccountHead?accountHeadId="" + nodeId,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    $('#selectedNode').val(nodeId);
                    $('#displayAccountHead').show();
                    $('#accountCodeLabel').text(response.AccountCode);
                    $('#accountHeadNameLabel').text(response.AccountHeadName);
                    $('#accountHeadTypeLabel').val(response.AccountHeadType);
                    $('#accountCategoryLabel').val(response.AccountHeadCategory);
                    $('#accountPeriodLabel').val(response.AccountPeriod);
                ");
                WriteLiteral(@"    $('#isLedgerLabel').text(response.IsLedger);
                    if (response.IsLedger == true) {
                        $(""#addChildNode"").attr(""disabled"", ""disabled"");
                    } else
                        $(""#addChildNode"").removeAttr(""disabled"");
                },
                failure: function(response) {
                    console.log(response);
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                },
                error: function(response) {
                    console.log(response);
                    alert(""Error..! Could not Fetch Data using Ajax."");
                }
            });
        }

        function addChild() {
            if ($('#BranchMediumId').val() == null || $('#BranchMediumId').val() == '') {
                $('#globalError').append('Invalid branchmedium id');
                return;
            } else {
                $('#globalError').text('');
            }
            if ($('#SessionId').va");
                WriteLiteral(@"l() == null || $('#SessionId').val() == '') {
                $('#globalError').append('Invalid Session id');
                return;
            } else {
                $('#globalError').text('');
            }

            if ($('#addAccountCode').val() == null || $('#addAccountCode').val() == '') {
                $('#addAccountCodeError').text('Invalid account code');
                return;
            } else {
                $('#addAccountCodeError').text('');
            }

            if ($('#addAccountHeadName').val() == null || $('#addAccountHeadName').val() == '') {
                $('#addAccountHeadNameError').text('Invalid account name');
                return;
            } else {
                $('#addAccountHeadNameError').text('');
            }
            if ($('#addAccountHeadType').val() == null || $('#addAccountHeadType').val() == '') {
                $('#addAccountHeadTypeError').text('Invalid account head type');
                return;
            } else {");
                WriteLiteral(@"
                $('#addAccountHeadTypeError').text('');
            }

            if ($('#addAccountPeriod').val() == null || $('#addAccountPeriod').val() == '') {
                $('#addAccountPeriodError').text('Invalid account period');
                return;
            } else {
                $('#addAccountPeriodError').text('');
            }

            var model = {
                BranchMediumId: parseInt($('#BranchMediumId').val()),
                SessionId: parseInt($('#SessionId').val()),
                AccountCode: $(""#addAccountCode"").val(),
                AccountHeadName: $('#addAccountHeadName').val(),
                AccountHeadType: parseInt($('#addAccountHeadType').val()),
                //AccountHeadCategory: parseInt($('#addAccountCategory').val()),
                AccountPeriod: parseInt($('#addAccountPeriod').val()),
                IsLedger: document.getElementById(""addIsLedger"").checked,
                ParentAccountHeadId: parseInt($('#selectedNode').val()");
                WriteLiteral(@")
            };
            $.ajax({
                type: ""Post"",
                url: ""/Accounting/AddAccountHead"",
                data: JSON.stringify(model),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function(response) {
                    if (response.Id > 0) {
                        $('#globalError').text('');
                        $('#addAccountHeadChildModal').modal('hide');
                        window.location = window.location.protocol +
                            ""//"" +
                            window.location.host +
                            ""/BranchMedium/ViewAccount?branchMediumId="" +
                            ");
                EndContext();
                BeginContext(25730, 47, false);
#line 403 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                       Write(Model.AccountDisplayBranchMedium.BranchMediumId);

#line default
#line hidden
                EndContext();
                BeginContext(25777, 3182, true);
                WriteLiteral(@" +
                            ""#tab_1_2"";
                        location.reload(false);
                    } else {
                        $('#globalError').text('');
                        $('#globalError').text(response.ErrorMessage);
                    }
                },
                failure: function(response) {
                    console.log(response);
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                },
                error: function(response) {
                    console.log(response);
                    alert(""Error..! Could not Fetch Data using Ajax."");
                }
            });
        }


    </script>
    <script>
        function showTransactions() {
            if ($('#transactionStartDate').val() == null || $('#transactionStartDate').val() == '') {
                $('#transactionStartDateError').text('Choose start date');
                return;
            } else {
                $('#transactionStartDat");
                WriteLiteral(@"eError').text('');
            }

            if ($('#transactionEndDate').val() == null || $('#transactionEndDate').val() == '') {
                $('#transactionEndDateError').text('Choose end date');
                return;
            } else {
                $('#transactionEndDateError').text('');
            }
            var transactionStartdate = moment(new Date($('#transactionStartDate').val())).format('MM/DD/YYYY');
            var transactionEnddate = moment(new Date($('#transactionEndDate').val())).format('MM/DD/YYYY');
            console.log(transactionEnddate);
            if (transactionStartdate > transactionEnddate)
                $('#transactionStartDateError').text('Start Date must be smaller than end date');
            else
                $('#transactionStartDateError').text('');
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/GetTransactionWithFilteredDate?branchMediumId="" +
                    $('#branchMediumIdOfViewAccount').va");
                WriteLiteral(@"l() +
                    ""&startDate="" +
                    transactionStartdate.toString() +
                    ""&endDate="" +
                    transactionEnddate.toString(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                beforeSend: function() {

                },
                success: function(response) {
                    $(""#transactionTable > tbody"").empty();
                    jQuery.each(response,
                        function(index, item) {
                            var tableRow = ""<tr><td>"" +
                                item.TransactionNo +
                                ""</td><td>"" +
                                item.Description +
                                ""</td><td>"" +
                                moment(new Date(item.TransactionDate)).format('MM/DD/YYYY') +
                                ""</a></td><td>"" +
                                '<a href=""/Accounting/ShowTransaction?t");
                WriteLiteral("ransactionId=\' +\r\n                                item.Id +\r\n                                \'&branchMediumId=");
                EndContext();
                BeginContext(28960, 47, false);
#line 472 "C:\EMS\EducationManagementSystem\src\SinePulseEMS\Site\SinePulse.EMS.Site\Views\BranchMedium\ViewAccount.cshtml"
                                            Write(Model.AccountDisplayBranchMedium.BranchMediumId);

#line default
#line hidden
                EndContext();
                BeginContext(29007, 14252, true);
                WriteLiteral(@""" class=""action-link""><i class=""fa fa-eye action-icon""></i></a>' +
                                ""</td></tr>"";

                            $(""#transactionTable"").append(tableRow);
                        });
                },
                failure: function(response) {
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                },
                error: function(response) {
                    alert(""Error..! Could not Fetch Data using Ajax."");
                }
            });
        }
    </script>
    <script>
        function showTrialBalance() {
            resetShowHideBar();
            if ($('#sessionDropDown').val() == null || $('#sessionDropDown').val() == '') {
                $('#sessionDropDownError').text('Invalid session');
                return;
            } else {
                $('#sessionDropDownError').text('');
            }

            if ($('#monthType').val() == null || $('#monthType').val() == '') {
                $('");
                WriteLiteral(@"#monthTypeError').text('Invalid month');
                return;
            } else {
                $('#monthTypeError').text('');
            }

            $('#trialBalanceTransaction').show();
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/ShowTrialBalance?branchMediumId="" +
                    $('#branchMediumId').val() +
                    ""&sessionId="" +
                    $('#sessionDropDown').val() +
                    ""&endMonth="" +
                    $('#monthType').val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                beforeSend: function() {
                    // setting a timeout
                    $('#tbloader').show();
                },
                success: function(response) {
                    console.log(response);
                    $('#accountTypeTree').empty();
                    $(""#accountTypeTree"").append(response.AccountTypeTreeUi);
        ");
                WriteLiteral(@"            $('#debitTree').empty();
                    $(""#debitTree"").append(response.DebitTreeUi);
                    $('#creditEmptyTree').empty();
                    $(""#creditEmptyTree"").append(response.EmptyTreeUi);
                    $('#creditTree').empty();
                    $(""#creditTree"").append(response.CreditTreeUi);
                    $(""#totalDebit"").text(response.TotalDebit);
                    $(""#totalCredit"").text(response.TotalCredit);
                    $(""#trialBalanceDate"").text(moment(response.StartDate).format('MM/DD/YYYY') +
                        ' -- ' +
                        moment(response.EndDate).format('MM/DD/YYYY'));
                    $('#tbloader').hide();
                },
                failure: function(response) {
                    $('#tbloader').hide();
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                },
                error: function(response) {
                    $('#tbloader').hide();
 ");
                WriteLiteral(@"                   alert(""Error..! Could not Fetch Data using Ajax."");
                }
            });
        }
    </script>

    <script>
        function showIncomeStatement() {
            resetShowHideBar();
            if ($('#sessionDropDown2').val() == null || $('#sessionDropDown2').val() == '') {
                $('#sessionDropDownError2').text('Invalid session');
                return;
            } else {
                $('#sessionDropDownError2').text('');
            }

            if ($('#monthType2').val() == null || $('#monthType2').val() == '') {
                $('#monthTypeError2').text('Invalid month');
                return;
            } else {
                $('#monthTypeError2').text('');
            }

            $('#incomeStatementTransaction').show();
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/ShowIncomeStatement?branchMediumId="" +
                    $('#branchMediumId2').val() +
                    ""&sess");
                WriteLiteral(@"ionId="" +
                    $('#sessionDropDown2').val() +
                    ""&endMonth="" +
                    $('#monthType2').val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                beforeSend: function() {
                    // setting a timeout
                    $('#isloader').show();
                },
                success: function(response) {
                    console.log(response.AccountTypeTreeUi);
                    $('#isaccountTypeTree').empty();
                    $(""#isaccountTypeTree"").append(response.AccountTypeTreeUi);
                    $('#isdebitTree').empty();
                    $(""#isdebitTree"").append(response.DebitTreeUi);
                    $('#iscreditEmptyTree').empty();
                    $(""#iscreditEmptyTree"").append(response.EmptyTreeUi);
                    $('#iscreditTree').empty();
                    $(""#iscreditTree"").append(response.CreditTreeUi);
                    $(");
                WriteLiteral(@"""#istotalExpense"").text('Total Expenses=' + response.TotalExpense);
                    $(""#istotalRevenue"").text('Total Revenues=' + response.TotalRevenue);
                    $(""#isNetIncome"").text('Net Income =' + response.NetIncome);
                    $(""#incomeStatementDate"").text(moment(response.StartDate).format('MM/DD/YYYY') +
                        ' -- ' +
                        moment(response.EndDate).format('MM/DD/YYYY'));
                    $('#isloader').hide();
                },
                failure: function(response) {
                    $('#isloader').hide();
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                },
                error: function(response) {
                    $('#isloader').hide();
                    alert(""Error..! Could not Fetch Data using Ajax."");
                }
            });
        }
    </script>

    <script>
        function showBalanceSheet() {
            resetShowHideBar();
           ");
                WriteLiteral(@" if ($('#sessionDropDown3').val() == null || $('#sessionDropDown3').val() == '') {
                $('#sessionDropDownError3').text('Invalid session');
                return;
            } else {
                $('#sessionDropDownError3').text('');
            }

            if ($('#monthType3').val() == null || $('#monthType3').val() == '') {
                $('#monthTypeError3').text('Invalid month');
                return;
            } else {
                $('#monthTypeError3').text('');
            }

            $('#balanceSheetTransaction').show();
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/ShowBalanceSheet?branchMediumId="" +
                    $('#branchMediumId3').val() +
                    ""&sessionId="" +
                    $('#sessionDropDown3').val() +
                    ""&endMonth="" +
                    $('#monthType3').val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",");
                WriteLiteral(@"
                beforeSend: function() {
                    // setting a timeout
                    $('#loader').show();
                },
                success: function(response) {
                    console.log(response.AccountTypeTreeUi);
                    $('#balanceSheetAccountTree').empty();
                    $(""#balanceSheetAccountTree"").append(response.AccountTypeTreeUi);
                    $('#balanceSheetdebitTree').empty();
                    $(""#balanceSheetdebitTree"").append(response.DebitTreeUi);
                    $('#balanceSheetEmptyTree').empty();
                    $(""#balanceSheetEmptyTree"").append(response.EmptyTreeUi);
                    $('#balanceSheetcreditTree').empty();
                    $(""#balanceSheetcreditTree"").append(response.CreditTreeUi);
                    $(""#balanceSheettotalAsset"").text('');
                    if (response.IsYearClosing == false) {
                        $(""#balanceSheettotalLiabilities"").text((parseFloat(response.T");
                WriteLiteral(@"otalLiabilities) +
                            parseFloat(response.TotalEquity) +
                            parseFloat(response.NetIncome)));
                    } else {
                        $(""#balanceSheettotalLiabilities"").text((parseFloat(response.TotalLiabilities) +
                            parseFloat(response.TotalEquity)
                        ));
                    }

                    //$(""#balanceSheetNetIncome"").text('Net Income =' + response.NetIncome);
                    $(""#balanceSheetDate"").text(moment(response.StartDate).format('MM/DD/YYYY') +
                        ' -- ' +
                        moment(response.EndDate).format('MM/DD/YYYY'));
                    $('#loader').hide();
                },
                failure: function(response) {
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                    $('#loader').hide();
                },
                error: function(response) {
                    console.log(re");
                WriteLiteral(@"sponse);
                    alert(""Error..! Could not Fetch Data using Ajax."");
                    $('#loader').hide();
                }
            });
        }
    </script>
    <script>
        function showAccountHeadFiltered() {
            if ($('#sessionDropDown6').val() == null || $('#sessionDropDown6').val() == '') {
                $('#sessionDropDownError6').text('Invalid session');
                return;
            } else {
                $('#sessionDropDownError6').text('');
            }

            $('#displayAccountHeadTree').hide();
            $.ajax({
                type: ""GET"",
                url: ""/Accounting/ShowChartOfAccountFiltered?branchMediumId="" +
                    $('#branchMediumId6').val() +
                    ""&sessionId="" +
                    $('#sessionDropDown6').val(),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                beforeSend: function() {
                    // settin");
                WriteLiteral(@"g a timeout
                    $('#loader').show();
                },
                success: function(response) {
                    $(""#accountNodeList"").empty();
                    $(""#accountNodeList"").append(response.TreeUi);
                    $('#displayAccountHead').hide();
                    if (response.IsSessionClosed == true) {
                        $('#addChildNode').hide();
                        
                    } else {
                        $('#addChildNode').show();
                    }

                    var toggler = document.getElementsByClassName(""caret2"");
                    for (i = 0; i < toggler.length; i++) {
                        toggler[i].addEventListener(""click"",
                            function() {
                                this.parentElement.querySelector("".nested2"").classList.toggle(""active2"");
                                this.classList.toggle(""caret-down2"");
                            });
                    }

    ");
                WriteLiteral(@"                $(""#myUL li"").click(function(e) {
                        //Your code here
                        e.stopPropagation();
                    });
                    $('#displayAccountHeadTree').show();
                    $('#loader').hide();
                },
                failure: function(response) {
                    alert(""Failure..! Could not Fetch Data using Ajax."");
                    $('#loader').hide();
                },
                error: function(response) {
                    console.log(response);
                    alert(""Error..! Could not Fetch Data using Ajax."");
                    $('#loader').hide();
                }
            });
        }
    </script>
    <script>

        function showBar(btn) {

            if ($(btn).find('span').text() == 'Show Bar') {
                $(btn).find('span').text('Hide Bar');
                $("".myUL li"").css('border-bottom', '1px solid red');
            } else {
                $(btn).find('sp");
                WriteLiteral(@"an').text('Show Bar');
                $("".myUL li"").css('border-bottom', '');
            }

        }

        function renderChartOfAccount() {

            $(""#displayAddAccountHeadPage"").load(
                ""/Accounting/ShowChartOfAccount?branchMediumId="" + $('#branchMediumIdOfViewAccount').val(),
                function() {
                    var i;
                    $('#displayAccountHead').hide();
                    var toggler = document.getElementsByClassName(""caret2"");
                    for (i = 0; i < toggler.length; i++) {
                        toggler[i].addEventListener(""click"",
                            function() {
                                this.parentElement.querySelector("".nested2"").classList.toggle(""active2"");
                                this.classList.toggle(""caret-down2"");
                            });
                    }

                    $(""#myUL li"").click(function(e) {
                        //Your code here
                     ");
                WriteLiteral(@"   e.stopPropagation();
                    });
                });


        }

        function renderTrialBalance() {

            $(""#displayTrialBalancePage"").load(
                ""/Accounting/ShowTrialBalanceDefault?branchMediumId="" + $('#branchMediumIdOfViewAccount').val(),
                function() {

                });


        }

        function renderIncomeStatement() {

            $(""#displayIncomeStatementPage"").load(
                ""/Accounting/ShowIncomeStatementDefault?branchMediumId="" + $('#branchMediumIdOfViewAccount').val(),
                function() {

                });


        }

        function renderBalanceSheet() {

            $(""#displayBalanceSheetPage"").load(
                ""/Accounting/ShowBalanceSheetDefault?branchMediumId="" + $('#branchMediumIdOfViewAccount').val(),
                function() {

                });


        }

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<AccountDisplayModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
